@model AllPlayersQueryModel
@{
    ViewBag.Title = $"All {Model.TeamName} Players";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalPlayersCount / AllPlayersQueryModel.PlayersPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
        asp-controller="Player" asp-action="All"
        asp-route-currentPage="@previousPage"><<</a>
    </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Players.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
        asp-controller="Player" asp-action="All"
        asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
    </div>
</div>

@if (!Model.Players.Any())
{
        <h3 class="text-center">There are no players!</h3>
}
else
{
    <div class="row">
        @foreach (var player in Model.Players)
        {
            <partial name="_PlayerPartial" model="@player" />
        }
    </div>
}

    



